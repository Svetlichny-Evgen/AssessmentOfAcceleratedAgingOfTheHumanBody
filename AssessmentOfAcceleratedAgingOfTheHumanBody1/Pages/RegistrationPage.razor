@page "/register"
@using AssessmentOfAcceleratedAgingOfTheHumanBody1.DAL.Interfaces
@using AssessmentOfAcceleratedAgingOfTheHumanBody1.Enums
@using AssessmentOfAcceleratedAgingOfTheHumanBody1.Models.User
@inject NavigationManager Navigation
@inject HttpClient Http

<div class="conteiner">
    <div class="registration-area">
        <EditForm Model="@accountModel" OnValidSubmit="@HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="fullName">ПІБ:</label>
                <InputText id="fullName" @bind-Value="@accountModel.FullName" class="form-control" />
                <ValidationMessage For="@(() => accountModel.FullName)" />
            </div>

            <div class="form-group">
                <label for="birthday">Дата народження:</label>
                <InputDate id="birthday" @bind-Value="@accountModel.Birthday" class="form-control" />
                <ValidationMessage For="@(() => accountModel.Birthday)" />
            </div>

            <div class="form-group">
                <label for="sex">Стать:</label>
                <InputSelect id="sex" @bind-Value="@accountModel.Sex" class="form-control">
                    @foreach (var sex in Enum.GetValues(typeof(Sex)))
                    {
                        <option value="@sex">@GetSexString((Sex)sex)</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => accountModel.Sex)" />
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <InputText id="email" @bind-Value="@accountModel.EMail" class="form-control" />
                <ValidationMessage For="@(() => accountModel.EMail)" />
            </div>

            <div class="form-group">
                <label for="password">Пароль:</label>
                <InputText id="password" @bind-Value="@accountModel.Password" class="form-control" type="password" />
                <ValidationMessage For="@(() => accountModel.Password)" />
            </div>

            <button type="submit" class="btn btn-primary">Зареєструватися</button>
        </EditForm>
    </div>
</div>


@code {
    private AccountModel accountModel = new AccountModel();
    private string errorMessage;

    private async Task HandleRegister()
    {
        string encodedPassword = PasswordHandler.EncodePassword(accountModel.Password);
        accountModel.Password = encodedPassword;

        var response = await Http.PostAsJsonAsync("/account/register", accountModel);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            errorMessage = "Не вдалося зареєструватися.";
        }
    }

    public string GetSexString(Sex sex)
    {
        switch (sex)
        {
            case Sex.Male:
                return "Чоловік";
            case Sex.Female:
                return "Жінка";
            default:
                return "";
        }
    }
}
